---
import Plantilla from '@/plantillas/Plantilla.astro';
import EnflujoImagen from '@/componentes/EnflujoImagen.astro';
import EquipoRedes from '@/componentes/EquipoRedes.astro';
import { gql, obtenerDatos } from '@/utilidades/ayudas';
import type { PersonaEquipo } from '@/tipos';
import { Schema } from 'astro-seo-schema';
import type { Person } from 'schema-dts';

export async function getStaticPaths() {
  const Equipo = gql`
    query {
      equipo(filter: { estado: { _eq: "publicado" } }) {
        slug
      }
    }
  `;
  const { equipo } = await obtenerDatos<{ equipo: { slug: string }[] }>(Equipo);

  return equipo.map(({ slug }) => {
    return { params: { slug } };
  });
}

const { slug } = Astro.params;

const Persona = gql`
  query {
    equipo(filter: { slug: { _eq: "${slug}" }, estado: {_eq: "publicado"} }, limit: 1) {
      nombre
      slug
      rol
      descripcion
      date_created
      sitio_web
      activo
      redes
      proyectos(sort: ["-proyectos_id.fecha_publicacion"]) {
        proyectos_id {
          titulo
          slug
        }
      }
      foto {
        id
        title
      }
    }
  }
`;

const { equipo } = await obtenerDatos<{ equipo: PersonaEquipo[] }>(Persona);
let persona: PersonaEquipo;
const seo: Person = {
  '@type': 'Person',
};

if (equipo && equipo.length) {
  persona = equipo[0];
  if (persona.date_created) persona.date_created = new Date(persona.date_created);
  if (persona.foto) {
    seo.image = `https://api.enflujo.com/assets/${persona.foto.id}/foto-perfil-${persona.slug}.jpg`;
  } else {
    persona.foto = { id: '10440743-5d64-4117-b906-fbfb05f2bab5', title: persona.nombre };
  }

  seo.name = persona.nombre;
  if (persona.sitio_web) seo.url = persona.sitio_web;
  if (persona.redes && persona.redes.length) {
    seo.sameAs = persona.redes.map((red) => red.url);
  }

  if (persona.rol) {
    seo.jobTitle = persona.rol;
  }
} else {
  return Astro.redirect('/404');
}
---

<Plantilla titulo={persona.nombre} descripcion={persona.descripcion} imagen={persona.foto}>
  <Schema
    slot="cabeza"
    item={{
      '@context': 'https://schema.org',
      ...seo,
    }}
  />
  <main class="pagina paginaMiembro">
    <section class="resumen contenedorFluido">
      {
        persona.foto.id && (
          <div class="seccionImagen">
            <EnflujoImagen imgId={persona.foto.id} ancho="300" alto="300" titulo={persona.foto.title} />
          </div>
        )
      }

      <div class="columna2">
        <h1 class="nombre">{persona.nombre}</h1>
        <p class="rol">{persona.rol}</p>
        {persona.redes && <EquipoRedes sitioWeb={persona.sitio_web} redes={persona.redes} />}
        {persona.descripcion && <div class="bio" set:html={persona.descripcion} />}
      </div>
    </section>

    {
      persona.proyectos && persona.proyectos.length && (
        <section class="contenedorFluido contenido">
          <h2 class="tituloSeccion">Proyectos</h2>
          <ul>
            {persona.proyectos.map((proyecto) => (
              <li>
                <a href={`/proyectos/${proyecto.proyectos_id.slug}`}>{proyecto.proyectos_id.titulo}</a>
              </li>
            ))}
          </ul>
        </section>
      )
    }
  </main>
</Plantilla>

<style lang="scss">
  @import '@/scss/_constantes.scss';
  @import '@/scss/_mixins.scss';

  section {
    margin-bottom: 1em;
  }

  .tituloSeccion {
    margin-bottom: 0.8em;
  }

  .resumen {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .nombre {
    font-size: 1.3em;
    padding: 0.3em 1.3em 0 0.8em;
    margin-left: -0.8em;
    margin-top: 0.5em;
    text-align: center;
    color: $colorOscuro2;
  }

  .iconoRed {
    width: 18px;
  }

  .rol {
    font-weight: $fuentePrincipalBold;
    text-align: center;
    margin: 0 auto 0.5em auto;
    color: $colorOscuro2;
  }

  .seccionImagen {
    line-height: 0;
  }

  .columna2 {
    border-bottom: 2px solid;
  }
  .bio {
    font-size: 0.9em;
    padding-bottom: 2em;
  }

  // Tel√©fonos horizontal
  @media (min-width: $minCelular) {
  }

  // Pantallas medianas (Tablets)
  @media (min-width: $minTablet) {
    .resumen {
      flex-direction: row;
      flex-wrap: nowrap;
      align-items: stretch;
    }

    .nombre {
      margin-top: 0;
    }

    .columna2 {
      margin-left: 1em;
      width: calc(100% - 300px - 1em);
    }
  }

  // Dispositivos grandes y pantallas medianas
  @media (min-width: $minPantalla) {
  }

  // Pantallas grandes
  @media (min-width: $minPantallaGrande) {
  }
</style>
