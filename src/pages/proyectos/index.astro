---
import Plantilla from '@/plantillas/Plantilla.astro';
import { gql, obtenerDatos } from '@/utilidades/ayudas';
import Tarjeta from '@/componentes/Tarjeta.astro';

const Proyectos = gql`
  query {
    paginas(filter: { slug: { _eq: "proyectos" }, estado: { _eq: "publicado" } }, limit: 1) {
      titulo
      slug
      descripcion
      contenido
      imagen {
        id
        title
      }
    }

    proyectos(filter: { estado: { _eq: "publicado" } }, sort: ["-date_created"]) {
      titulo
      slug
      descripcion
      fecha_publicacion
      date_created
      fecha_inicio
      enlace
      repos
      temas {
        glosario_id(filter: { estado: { _eq: "publicado" } }) {
          titulo
        }
      }
      imagen {
        id
        title
      }
    }
  }
`;
const datos = await obtenerDatos(Proyectos);
const pagina = datos.paginas.length && datos.paginas[0].slug ? datos.paginas[0] : null;
let proyectos = [];
const temas = new Set();

if (datos.proyectos && datos.proyectos.length) {
  const cache = datos.proyectos.map((proyecto) => {
    proyecto.fecha_publicacion = proyecto.fecha_publicacion ? new Date(proyecto.fecha_publicacion) : null;
    proyecto.date_created = proyecto.date_created ? new Date(proyecto.date_created) : null;
    proyecto.fecha_inicio = proyecto.fecha_inicio ? new Date(proyecto.fecha_inicio) : null;
    proyecto.terminado = !!proyecto.fecha_publicacion;

    if (proyecto.temas) {
      proyecto.temas = proyecto.temas
        .map((tema) => (tema.glosario_id ? tema.glosario_id.titulo : null))
        .filter(Boolean);
    }
    return proyecto;
  });

  cache.forEach((proyecto) => {
    if (proyecto.temas && proyecto.temas.length) {
      proyecto.temas.forEach((tema) => {
        temas.add(tema);
      });
    }
  });

  proyectos = cache;
}

const formatoFecha = (fecha: Date) => {
  return fecha.toLocaleString('es-CO', {
    timeZone: 'America/Bogota',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

const texto = (estado: boolean, fecha: Date) => (estado ? `Publicado el ${formatoFecha(fecha)}` : 'En proceso');
---

<Plantilla titulo={pagina.titulo} descripcion={pagina.descripcion} imagen={pagina.imagen}>
  <main id="archivoProyectos" class="pagina">
    <section class="inicioPagina">
      <h1 class="tituloPagina">{pagina.titulo}</h1>
    </section>

    <div class="contenedorTarjetas">
      {
        proyectos.map((proyecto) => (
          <Tarjeta datos={proyecto} imagen={proyecto.imagen} coleccion="proyectos">
            <div class="descripcion seccionDescripcion">
              <div class="fecha">
                <p class="textoEstado">
                  {texto(proyecto.terminado, proyecto.fecha_publicacion || proyecto.fecha_inicio)}
                </p>
                <img
                  class="enflujoPunto"
                  src="/imgs/EnFlujo_punto_v61.svg"
                  alt="Icono separador entre fecha y hace cuanto se realizó el proyecto."
                />
                <span class="notaEnFlujo" data-fecha={proyecto.fecha_publicacion || proyecto.fecha_inicio} />
              </div>

              <p>{proyecto.descripcion}</p>
            </div>

            <div class="repos">
              <p class="interTitulo">Código:</p>
              {proyecto.repos.map((repo) => (
                <div class="repo">
                  <img class="iconoRed" src="/imgs/github.svg" alt="Icono GitHub" />
                  <a class="repoNombre" href={repo.url} target="_blank" rel="external">
                    {repo.nombre}
                  </a>
                </div>
              ))}
            </div>
          </Tarjeta>
        ))
      }
    </div>
  </main>
</Plantilla>

<style lang="scss">
  @import '../../scss/_constantes.scss';

  p {
    margin: 1em 0;
    line-height: 1.4;
  }

  .seccionDescripcion {
    margin: 0.5em 0;
  }

  .repos {
    display: flex;
    align-items: flex-end;
    flex: 1;
    margin: 0.5em 0;
    flex-wrap: wrap;

    .interTitulo {
      margin: 0 0.5em 0 0;
      width: auto;
      line-height: 1.25;
    }
    .repo {
      margin-right: 2em;
      display: flex;
      align-items: center;
    }
    .iconoRed {
      width: 15px;
    }
    .repoNombre {
      margin-left: 0.3em;
    }
  }

  #filtros {
    font-size: 0.9em;
    left: 0;

    .intertitulo {
      font-weight: $fuentePrincipalBold;
    }

    ul {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;

      &.activo {
        li {
          opacity: 0.5;

          &:hover {
            opacity: 1;
          }
        }
      }

      li {
        cursor: pointer;
        margin-right: 0.3em;
        font-style: italic;

        &:hover {
          color: $colorPrincipal;
        }

        &.actual {
          opacity: 1;

          &:hover {
            color: $colorOscuro;
          }
        }
      }
    }
  }
</style>
