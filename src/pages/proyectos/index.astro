---
import Plantilla from '@/plantillas/Plantilla.astro';
import { gql, obtenerDatos } from '@/utilidades/ayudas';
import Tarjeta from '@/componentes/Tarjeta.astro';
import { Proyecto } from '@/enflujo';
import DescripcionProyecto from '@/componentes/DescripcionProyecto.astro';

const Proyectos = gql`
  query {
    paginas(filter: { slug: { _eq: "proyectos" }, estado: { _eq: "publicado" } }, limit: 1) {
      titulo
      slug
      descripcion
      contenido
      imagen {
        id
        title
      }
    }

    proyectos(filter: { estado: { _eq: "publicado" } }, sort: ["-date_created"]) {
      titulo
      slug
      descripcion
      fecha_publicacion
      date_created
      fecha_inicio
      enlace
      repos
      temas {
        glosario_id(filter: { estado: { _eq: "publicado" } }) {
          titulo
        }
      }
      imagen {
        id
        title
      }
    }
  }
`;
const { proyectos, paginas } = await obtenerDatos(Proyectos);
const pagina = paginas.length && paginas[0].slug ? paginas[0] : null;
---

<Plantilla titulo={pagina.titulo} descripcion={pagina.descripcion} imagen={pagina.imagen}>
  <main id="archivoProyectos" class="pagina">
    <section class="inicioPagina">
      <h1 class="tituloPagina">{pagina.titulo}</h1>
    </section>

    <div class="contenedorTarjetas">
      {
        proyectos.map((proyecto: Proyecto) => (
          <Tarjeta datos={proyecto} imagen={proyecto.imagen} coleccion="proyectos">
            <DescripcionProyecto datos={proyecto} />
          </Tarjeta>
        ))
      }
    </div>
  </main>
</Plantilla>

<style lang="scss">
  @import '../../scss/_constantes.scss';

  p {
    margin: 1em 0;
    line-height: 1.4;
  }

  .seccionDescripcion {
    margin: 0.5em 0;
  }

  #filtros {
    font-size: 0.9em;
    left: 0;

    .intertitulo {
      font-weight: $fuentePrincipalBold;
    }

    ul {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;

      &.activo {
        li {
          opacity: 0.5;

          &:hover {
            opacity: 1;
          }
        }
      }

      li {
        cursor: pointer;
        margin-right: 0.3em;
        font-style: italic;

        &:hover {
          color: $colorPrincipal;
        }

        &.actual {
          opacity: 1;

          &:hover {
            color: $colorOscuro;
          }
        }
      }
    }
  }
</style>
