---
import Plantilla from '@/plantillas/Plantilla.astro';
import { gql, obtenerDatos, urlImagen } from '@/utilidades/ayudas';
import { marked } from 'marked';

export async function getStaticPaths() {
  const Proyectos = gql`
    query {
      proyectos(filter: { estado: { _eq: "publicado" } }, sort: ["-date_created"]) {
        slug
      }
    }
  `;
  const { proyectos } = await obtenerDatos(Proyectos);

  return proyectos.map(({ slug }) => {
    return { params: { slug } };
  });
}

const { slug } = Astro.params;

const Proyecto = gql`
  query {
    proyectos(filter: { slug: { _eq: "${slug}" }, estado: {_eq: "publicado"} }, limit: 1) {
      titulo
      slug
      descripcion
      contenido
      fecha_publicacion
      date_created
      enlace
      estado
      repos
      imagen {
        id
        title
      }
    }
  }
`;

const { proyectos } = await obtenerDatos(Proyecto);
let pagina;

if (proyectos && proyectos.length) {
  pagina = proyectos[0];
  pagina.fecha_publicacion = pagina.fecha_publicacion ? new Date(pagina.fecha_publicacion) : null;
  pagina.date_created = pagina.date_created ? new Date(pagina.date_created) : null;
}
---

<Plantilla titulo={pagina.titulo} descripcion={pagina.descripcion} imagen={pagina.imagen}>
  <main class="pagina">
    <section>
      <h1 class="tituloPagina">{pagina.titulo}</h1>
      <div>
        {
          pagina.imagen && pagina.imagen.id && (
            <img
              src={urlImagen(pagina.imagen.id, {
                width: '1200',
                height: '630',
                quality: '90',
                format: 'webp',
              })}
              alt={pagina.imagen.title}
              width="1200"
              height="630"
            />
          )
        }

        {
          pagina.enlace && (
            <a class={`enlace ${pagina.estado}`} href={pagina.enlace} target="_blank">
              Ver Proyecto
            </a>
          )
        }

        <!--  -->
        <!-- <ProyectoRepositorios v-if="pagina.repos && pagina.repos.length" :repos="pagina.repos" /> -->
      </div>
    </section>

    {
      pagina.contenido && (
        <div>
          <Fragment set:html={marked.parse(pagina.contenido)} />
        </div>
      )
    }
  </main>
</Plantilla>

<style lang="scss">
  @import '../../scss/_constantes.scss';
  @import '../../scss/_mixins.scss';

  .titulo {
    font-size: 1.6em;
    padding: 0.3em 1.3em 0.5em 0.3em;
    margin-bottom: 1em;
    @include tituloMarco;
  }

  .seccionProyecto {
    margin-top: 1em;
  }

  .enlace {
    padding: 0.5em;
    background-color: $colorPrincipal;
    font-weight: $fuentePrincipalPeso;
    color: white;
    width: 50%;
    text-align: center;
    width: 100%;
    margin: 1em 0;
    display: block;

    &:hover {
      opacity: 0.8;
    }

    &.proceso {
      background-color: $colorOscuro2;
    }
  }
</style>
